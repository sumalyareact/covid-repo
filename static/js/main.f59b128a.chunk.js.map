{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","getCovidData","a","fetch","res","json","resf","console","log","statewise","useEffect","className","fontSize","style","color","green","slice","map","curElem","inde","state","confirmed","active","recovered","deaths","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAiFeA,MA5Ef,WAEA,MAAuBC,mBAAS,IAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KAGMC,EAAY,uCAAG,8BAAAC,EAAA,sEACFC,MAAM,0CADJ,cACbC,EADa,gBAEAA,EAAIC,OAFJ,OAEbC,EAFa,OAGnBC,QAAQC,IAAIF,EAAKG,WACjBT,EAAQM,EAAKG,WAJM,2CAAH,qDAchB,OANFC,qBAAU,WACRT,MAEC,IAIC,mCACA,sBAAKU,UAAU,6CAAf,UACA,sBAAKA,UAAU,2DAAf,UACD,cAAC,IAAD,CAAuBC,SAAS,QAAQC,MAAO,CAAEC,MAAOC,IAAM,MAAQJ,UAAU,cAAhF,eACA,+DAKC,qBAAKA,UAAU,mBAAf,SACA,wBAAOA,UAAU,8CAAjB,UACF,gCACE,+BACE,mCACA,uCACA,2CACA,wCACA,2CACA,6CAGJ,gCAEEZ,EAAKiB,MAAM,GAAGC,KAAK,SAACC,EAASC,GACjC,OACE,mCACA,+BACI,6BAAKA,IACL,6BAAKD,EAAQE,QACb,6BAAKF,EAAQG,YACb,6BAAKH,EAAQI,SACb,6BAAKJ,EAAQK,YACb,6BAAKL,EAAQM,8BC7CJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f59b128a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AssessmentTwoToneIcon from '@material-ui/icons/AssessmentTwoTone';\nimport { green } from '@material-ui/core/colors';\n\nfunction App() {\n\nconst[data, setData] = useState([]);\n\n  const resf =[];\nconst getCovidData = async () => {\n  const res =await fetch('https://api.covid19india.org/data.json');\n  const resf = await res.json();\n  console.log(resf.statewise);\n  setData(resf.statewise);\n\n}\n\nuseEffect(()=>{\n  getCovidData();\n\n}, []);\n\n\n  return (\n    <>\n    <div className='container-fluid border border-dark bg-info'>\n    <div className='jumbotron jumbotron-fluid text-center bg-dark text-light'>\n   <AssessmentTwoToneIcon fontSize=\"large\" style={{ color: green[500] }} className='effect_icon'> </AssessmentTwoToneIcon> \n   <h1>Live Covid Tracker | INDIA</h1>\n\n   \n    \n    </div>\n    <div className=\"table-responsive\">\n    <table className=\"table table-hover table-primary text-center\">\n  <thead>\n    <tr>\n      <th>#</th>\n      <th>State</th>\n      <th>Confirmed</th>\n      <th>Active</th>\n      <th>Recovered</th>\n      <th>Deaths</th>\n    </tr>\n  </thead>\n  <tbody>\n  {\n    data.slice(1).map( (curElem, inde) => {\nreturn (\n  <>\n  <tr >\n      <td>{inde}</td>\n      <td>{curElem.state}</td>\n      <td>{curElem.confirmed}</td>\n      <td>{curElem.active}</td>\n      <td>{curElem.recovered}</td>\n      <td>{curElem.deaths}</td>\n    </tr>\n  </>\n);\n    })\n  \n  }\n \n   \n  </tbody>\n</table>\n</div>\n\n    </div>\n  {/*  {data.map((curElem, inde)=>{\n     return (\n<h4> {curElem.state}</h4>\n     );\n   })} */}\n \n</>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}